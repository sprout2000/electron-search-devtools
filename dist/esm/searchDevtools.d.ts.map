{"version":3,"sources":["../../src/searchDevtools.ts"],"names":[],"mappings":"AAIA,MAAM,WAAW,OAAO;IACtB,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,OAAO,CAAC,EAAE,eAAe,GAAG,UAAU,CAAC;CACxC;AAED,oBAAY,QAAQ,GAChB,QAAQ,GACR,SAAS,GACT,KAAK,GACL,MAAM,GACN,OAAO,GACP,OAAO,CAAC;AAiBZ,eAAO,MAAM,gBAAgB,YAAa,GAAG,uBAwB5C,CAAC;AAEF,eAAO,MAAM,aAAa,QACnB,QAAQ,WACJ,OAAO,CAAC,SAAS,CAAC,KAC1B,MAkBF,CAAC;AAEF,eAAO,MAAM,SAAS,aACV,MAAM,WACP,OAAO,CAAC,SAAS,CAAC,KAC1B,MAQF,CAAC;AAEF,eAAO,MAAM,UAAU,qCAAwB,OAO9C,CAAC;AAEF,eAAO,MAAM,cAAc,QACpB,QAAQ,oCAEZ,QAAQ,MAAM,GAAG,IAAI,CA8CvB,CAAC","file":"searchDevtools.d.ts","sourcesContent":["import os from 'os';\nimport fs from 'fs';\nimport path from 'path';\n\nexport interface Options {\n  profile?: string;\n  browser?: 'google-chrome' | 'chromium';\n}\n\nexport type Devtools =\n  | 'JQUERY'\n  | 'ANGULAR'\n  | 'VUE'\n  | 'VUE3'\n  | 'REACT'\n  | 'REDUX';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst typeGuardArg = (arg: any): arg is Devtools => {\n  return (\n    arg !== null &&\n    typeof arg === 'string' &&\n    (arg === 'JQUERY' ||\n      arg === 'ANGULAR' ||\n      arg === 'VUE3' ||\n      arg === 'VUE' ||\n      arg === 'REACT' ||\n      arg === 'REDUX')\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport const typeGuardOptions = (options: any): options is Options => {\n  if (options === undefined) return true;\n  if (typeof options !== 'object') return false;\n  if (options['profile'] === undefined && options['browser'] === undefined) {\n    return false;\n  }\n\n  if (\n    typeof options['profile'] === 'string' ||\n    options['profile'] === undefined\n  ) {\n    switch (options['browser']) {\n      case undefined:\n        return true;\n      case 'google-chrome':\n        return true;\n      case 'chromium':\n        return true;\n      default:\n        return false;\n    }\n  } else {\n    return false;\n  }\n};\n\nexport const whichDevtools = (\n  arg: Devtools,\n  profile: Options['profile']\n): string => {\n  const userProfile = profile || 'Default';\n  switch (arg) {\n    case 'JQUERY':\n      return `/${userProfile}/Extensions/dbhhnnnpaeobfddmlalhnehgclcmjimi`;\n    case 'ANGULAR':\n      return `/${userProfile}/Extensions/ienfalfjdbdpebioblfackkekamfmbnh`;\n    case 'VUE3':\n      return `/${userProfile}/Extensions/ljjemllljcmogpfapbkkighbhhppjdbg`;\n    case 'VUE':\n      return `/${userProfile}/Extensions/nhdogjmejiglipccpnnnanhbledajbpd`;\n    case 'REDUX':\n      return `/${userProfile}/Extensions/lmhkpmbekcpmknklioeibfkpmmfibljd`;\n    case 'REACT':\n      return `/${userProfile}/Extensions/fmkadmapgofadopljbjfkapdkoienihi`;\n    default:\n      return `/${userProfile}/Extensions/fmkadmapgofadopljbjfkapdkoienihi`;\n  }\n};\n\nexport const getExtDir = (\n  platform: string,\n  browser: Options['browser']\n): string => {\n  if (platform === 'darwin') {\n    return '/Library/Application Support/Google/Chrome';\n  } else if (platform === 'win32') {\n    return '/AppData/Local/Google/Chrome/User Data';\n  } else {\n    return `/.config/${browser}`;\n  }\n};\n\nexport const getOptions = (options?: Options): Options => {\n  const profile = options ? options.profile || 'Default' : 'Default';\n  const browser = options\n    ? options.browser || 'google-chrome'\n    : 'google-chrome';\n\n  return { profile, browser };\n};\n\nexport const searchDevtools = async (\n  arg: Devtools,\n  options?: Options\n): Promise<string | void> => {\n  if (!typeGuardArg(arg)) {\n    console.log(\n      'You need to select an argument from the following six choices:\\n',\n      '\"REACT\", \"REDUX\", \"ANGULAR\", \"VUE\", \"VUE3\", or \"JQUERY\".'\n    );\n    return;\n  }\n\n  if (!typeGuardOptions(options)) {\n    console.log(\n      'The option should be an object containing the name of the profile or browser.'\n    );\n    return;\n  }\n\n  const providedOptions = getOptions(options);\n  const devtools = whichDevtools(arg, providedOptions.profile);\n  const devtoolsName = `${arg.charAt(0)}${arg.slice(1).toLowerCase()} Devtools`;\n  const dirPath = path.join(\n    os.homedir(),\n    getExtDir(os.platform(), providedOptions.browser),\n    devtools\n  );\n\n  return fs.promises\n    .readdir(dirPath, { withFileTypes: true })\n    .then((dirents) =>\n      dirents\n        .filter((dirent) => dirent.isDirectory())\n        .filter(({ name }) => name.match(/[0-9]*\\.?[0-9]+\\.[0-9]+_[0-9]+$/))\n        .map(({ name }) => path.resolve(dirPath, name))\n        .filter(async (dirname) =>\n          fs.promises\n            .access(`${dirname}${path.sep}manifest.json`)\n            .catch(() =>\n              console.log(`manifest.json for ${devtoolsName} is not found.`)\n            )\n        )\n        .pop()\n    )\n    .then(\n      (extPath) =>\n        extPath || console.log(`${devtoolsName} is undefined or not found.`)\n    )\n    .catch(() => console.log(`${devtoolsName} is not found.`));\n};\n"]}